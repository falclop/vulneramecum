@page "/vulnerabilities/{Id:int}"
@using vulneramecum.Data
@using vulneramecum.Service
@inject VulnerabilityService VulnService
@inject NavigationManager Navigation

@code {
    [Parameter] public int Id { get; set; }
    private Vulnerability? vulnerability;
    private bool loading = true;
    private bool showDeleteConfirm = false;
    private string? modalImage;

    protected override async Task OnInitializedAsync()
    {
        vulnerability = await VulnService.GetVulnerabilityByIdAsync(Id);
        loading = false;
    }

    private string GetSeverityColor(string severity) => severity switch
    {
        "Alta" => "border-danger",
        "Media" => "border-warning",
        "Baja" => "border-success",
        _ => "border-secondary"
    };

    private void ShowDeleteConfirmation() => showDeleteConfirm = true;
    private void CancelDelete() => showDeleteConfirm = false;

    private async Task DeleteVulnerability()
    {
        if (vulnerability is not null)
        {
            await VulnService.DeleteVulnerabilityAsync(vulnerability.Id);
            Navigation.NavigateTo("/vulnerabilities");
        }
    }

    private void ShowImageModal(string imagePath) => modalImage = imagePath;
    private void CloseModal() => modalImage = null;

    private void EditVulnerability() =>
        Navigation.NavigateTo($"/vulnerabilities/edit/{Id}");
}
@if (loading)
{
    <p>Cargando detalle de la vulnerabilidad...</p>
}
else if (vulnerability is null)
{
    <p class="text-danger">No se encontró la vulnerabilidad solicitada.</p>
}
else
{
    <div class="card border-2 @GetSeverityColor(vulnerability.Severity)">
        <div class="card-body">
            <h3 class="card-title">@vulnerability.Title</h3>
            <p class="text-muted">Lenguaje: @vulnerability.Language | Severidad: <strong>@vulnerability.Severity</strong></p>
            <p><strong>Descripción:</strong></p>
            <div class="mb-3" style="white-space: pre-line;">@((MarkupString)vulnerability.Description)</div>
            <p><strong>Solución:</strong></p>
            <div class="mb-3" style="white-space: pre-line;">@((MarkupString)vulnerability.Solution)</div>
        </div>

        @if (vulnerability.Images?.Any() == true)
        {
            <div class="card-footer">
                <h5>Ejemplos gráficos (pulsa para ampliar)</h5>
                <div class="row">
                    @foreach (var img in vulnerability.Images.OrderBy(i => i.OrderIndex))
                    {
                        <div class="col-md-4 mb-3">
                            <img src="@img.ImagePath" class="img-fluid border rounded shadow-sm"
                                 style="max-height: 300px; object-fit: contain; cursor: pointer;"
                                 @onclick="() => ShowImageModal(img.ImagePath)" />
                        </div>
                    }
                </div>
            </div>
        }

        @if (!string.IsNullOrEmpty(modalImage))
        {
            <div class="modal fade show d-block" tabindex="-1" style="background: rgba(0,0,0,0.7);">
                <div class="modal-dialog modal-xl modal-dialog-centered">
                    <div class="modal-content bg-dark text-white">
                        <div class="modal-body text-center">
                            <img src="@modalImage" class="img-fluid" />
                        </div>
                        <div class="modal-footer justify-content-center">
                            <button class="btn btn-light" @onclick="CloseModal">Cerrar</button>
                        </div>
                    </div>
                </div>
            </div>
        }

        @if (vulnerability.Examples?.Any() == true)
        {
            <div class="card-footer">
                <h5>Ejemplos prácticos</h5>
                <table class="table table-sm table-striped">
                    <thead>
                        <tr>
                            <th>Proyecto</th>
                            <th>Clase</th>
                            <th>Commit</th>
                            <th>Fecha</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var example in vulnerability.Examples.OrderByDescending(e => e.CommitDate))
                        {
                            <tr>
                                <td>@example.PropertyName</td>
                                <td>@example.ClassName</td>
                                <td><code>@example.CommitHash</code></td>
                                <td>@example.CommitDate.ToString("yyyy-MM-dd")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>

    <br />

    <div class="d-flex gap-2">
        <button class="btn btn-primary" @onclick="EditVulnerability">Editar vulnerabilidad</button>
        <button class="btn btn-danger" @onclick="ShowDeleteConfirmation">Eliminar vulnerabilidad</button>
    </div>

    @if (showDeleteConfirm)
    {
        <div class="modal fade show d-block" tabindex="-1" style="background: rgba(0,0,0,0.5);">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Confirmar eliminación</h5>
                        <button type="button" class="btn-close" @onclick="CancelDelete"></button>
                    </div>
                    <div class="modal-body">
                        <p>¿Estás seguro de que quieres eliminar esta vulnerabilidad?</p>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-secondary" @onclick="CancelDelete">Cancelar</button>
                        <button class="btn btn-danger" @onclick="DeleteVulnerability">Eliminar</button>
                    </div>
                </div>
            </div>
        </div>
    }
}
