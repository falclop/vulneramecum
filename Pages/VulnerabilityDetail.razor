@page "/vulnerabilities/{Id:int}"
@using vulneramecum.Data
@using vulneramecum.Service
@inject VulnerabilityService VulnService

@code {
    [Parameter] public int Id { get; set; }
    private Vulnerability? vulnerability;
    private bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        vulnerability = await VulnService.GetVulnerabilityByIdAsync(Id);
        loading = false;
    }
}

@if (loading)
{
    <p>Cargando detalle de la vulnerabilidad...</p>
}
else if (vulnerability is null)
{
    <p class="text-danger">No se encontró la vulnerabilidad solicitada.</p>
}
else
{
    <div class="card border-2 @GetSeverityColor(vulnerability.Severity)">
        <div class="card-body">
            <h3 class="card-title">@vulnerability.Title</h3>
            <p class="text-muted">Lenguaje: @vulnerability.Language | Severidad: <strong>@vulnerability.Severity</strong></p>
            <p><strong>Descripción:</strong> @vulnerability.Description</p>
            <p><strong>Solución:</strong> @vulnerability.Solution</p>
        </div>

        @if (vulnerability.Images?.Any() == true)
        {
            <div class="card-footer">
                <h5>Ejemplos gráficos</h5>
                <div class="row">
                    @foreach (var img in vulnerability.Images.OrderBy(i => i.OrderIndex))
                    {
                        <div class="col-md-4 mb-3">
                            <img src="@img.ImagePath" alt="@img.Caption" class="img-fluid rounded border" />
                            @if (!string.IsNullOrWhiteSpace(img.Caption))
                            {
                                <p class="mt-1 small text-muted">@img.Caption</p>
                            }
                        </div>
                    }
                </div>
            </div>
        }

        @if (vulnerability.Examples?.Any() == true)
        {
            <div class="card-footer">
                <h5>Ejemplos prácticos</h5>
                <table class="table table-sm table-striped">
                    <thead>
                        <tr>
                            <th>Proyecto</th>
                            <th>Clase</th>
                            <th>Commit</th>
                            <th>Fecha</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var example in vulnerability.Examples.OrderByDescending(e => e.CommitDate))
                        {
                            <tr>
                                <td>@example.PropertyName</td>
                                <td>@example.ClassName</td>
                                <td><code>@example.CommitHash</code></td>
                                <td>@example.CommitDate.ToString("yyyy-MM-dd")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
}

@code {
    private string GetSeverityColor(string severity) => severity switch
    {
        "Alta" => "border-danger",
        "Media" => "border-warning",
        "Baja" => "border-success",
        _ => "border-secondary"
    };
}
